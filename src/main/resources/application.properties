# application.properties (Default Profile - H2 In-Memory)

# JWT Configuration
app.jwtSecret========================YourSecretKey========================= শক্তপোক্ত একটা কী দিন এখানে যা সহজে কেউ অনুমান করতে পারবে না
app.jwtExpirationMs=86400000

# Default Spring Datasource Configuration (H2 In-Memory Database)
# These settings ensure H2 is used if no other datasource profile (like 'dockercompose') is active.
# Spring Boot typically auto-configures H2 if it's on the classpath and no other DB is explicitly configured.
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

# H2 Console (enabled for development convenience with the default H2 profile)
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# Default JPA and Hibernate Settings (for H2)
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
# 'update' attempts to update the schema, 'create-drop' recreates it on each run (good for tests/dev).
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true # Good for development to see generated SQL
spring.jpa.properties.hibernate.format_sql=true
# spring.jpa.defer-datasource-initialization=true # Use if you have schema.sql or data.sql for H2

# --- Profile-Specific Configurations ---
# To run with PostgreSQL using Docker Compose, activate the 'dockercompose' Spring profile.
# This can be done by setting the SPRING_PROFILES_ACTIVE environment variable.
# For example, in docker-compose.yml for the app service:
#   environment:
#     - SPRING_PROFILES_ACTIVE=dockercompose
# Database connection details for the 'dockercompose' profile are in:
# src/main/resources/application-dockercompose.properties
#
# To run with Microsoft SQL Server, activate the 'sqlserver' profile.
# This can be done by setting the SPRING_PROFILES_ACTIVE environment variable.
# Database connection details for the 'sqlserver' profile are in:
# src/main/resources/application-sqlserver.properties.
# You will typically need to set environment variables for the SQL Server connection, for example:
# DB_HOST_SQLSERVER, DB_PORT_SQLSERVER, DB_NAME_SQLSERVER, DB_USERNAME_SQLSERVER, DB_PASSWORD_SQLSERVER
# Example of running locally with these environment variables:
# SPRING_PROFILES_ACTIVE=sqlserver DB_HOST_SQLSERVER=localhost DB_NAME_SQLSERVER=mydb DB_USERNAME_SQLSERVER=myuser DB_PASSWORD_SQLSERVER=mypass java -jar target/demostockapp-0.0.1-SNAPSHOT.jar

# Logging (optional: set logging level for Spring Security or other components)
# logging.level.org.springframework.security=DEBUG
# logging.level.org.hibernate.SQL=DEBUG
# logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
